/**
 * @fileoverview This file is generated by the Angular template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride}
 */
/* tslint:disable */
import * as i0 from '../../../../src/app/+shared/shared.module';
import * as i1 from '@angular/material';
import * as i2 from '../../../node_modules/@angular/material/typings/index.ngfactory';
import * as i3 from '@angular/cdk';
import * as i4 from '@angular/platform-browser';
import * as i5 from '@angular/core';
import * as i6 from '@angular/common';
import * as i7 from '@angular/forms';
import * as i8 from '@angular/http';
import * as i9 from '../../../../src/app/+material/material.module';
import * as i10 from '@angular/router';
import * as i11 from '../../../../src/app/+shared/footer/footer.component';
import * as i12 from '../../../../src/app/+shared/navigation/navigation.component';
import * as i13 from './footer/footer.component.ngsummary';
import * as i14 from './navigation/navigation.component.ngsummary';
import * as i15 from '../../../node_modules/@angular/material/typings/index.ngsummary';
import * as i16 from '../../../node_modules/@angular/cdk/typings/index.ngsummary';
import * as i17 from '../../../node_modules/@angular/common/common.ngsummary';
import * as i18 from '../../../node_modules/@angular/forms/forms.ngsummary';
import * as i19 from '../+material/material.module.ngsummary';
import * as i20 from '../../../node_modules/@angular/router/router.ngsummary';
export function SharedModuleNgSummary() {
    return [{ summaryKind: 2, type: { reference: i0.SharedModule, diDeps: [], lifecycleHooks: [] },
            entryComponents: [{ componentType: i1.MdDialogContainer, componentFactory: i2.MdDialogContainerNgFactory },
                { componentType: i1.MdDatepickerContent, componentFactory: i2.MdDatepickerContentNgFactory },
                { componentType: i1.TooltipComponent, componentFactory: i2.TooltipComponentNgFactory },
                { componentType: i1.MdSnackBarContainer, componentFactory: i2.MdSnackBarContainerNgFactory },
                { componentType: i1.SimpleSnackBar, componentFactory: i2.SimpleSnackBarNgFactory }],
            providers: [{ provider: { token: { identifier: { reference: i3.DIR_DOCUMENT } }, useClass: null,
                        useValue: undefined, useFactory: null, useExisting: { identifier: { reference: i4.DOCUMENT } },
                        deps: undefined, multi: false }, module: { reference: i3.BidiModule, diDeps: [],
                        lifecycleHooks: [] } }, { provider: { token: { identifier: { reference: i3.Directionality,
                                diDeps: [{ isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: true,
                                        token: { identifier: { reference: i3.DIR_DOCUMENT } } }], lifecycleHooks: [] } },
                        useClass: { reference: i3.Directionality, diDeps: [{ isAttribute: false, isHost: false,
                                    isSelf: false, isSkipSelf: false, isOptional: true, token: { identifier: { reference: i3.DIR_DOCUMENT } } }],
                            lifecycleHooks: [] }, useValue: undefined, useFactory: null,
                        useExisting: undefined, deps: [{ isAttribute: false, isHost: false, isSelf: false,
                                isSkipSelf: false, isOptional: true, token: { identifier: { reference: i3.DIR_DOCUMENT } } }],
                        multi: false }, module: { reference: i3.BidiModule, diDeps: [], lifecycleHooks: [] } },
                { provider: { token: { identifier: { reference: i1.MATERIAL_SANITY_CHECKS } }, useClass: null,
                        useValue: true, useFactory: null, useExisting: undefined,
                        deps: undefined, multi: false }, module: { reference: i1.MdCommonModule,
                        diDeps: [{ isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false,
                                isOptional: true, token: { identifier: { reference: i4.DOCUMENT } } }, { isAttribute: false,
                                isHost: false, isSelf: false, isSkipSelf: false, isOptional: true, token: { identifier: { reference: i1.MATERIAL_SANITY_CHECKS } } }],
                        lifecycleHooks: [] } }, { provider: { token: { identifier: { reference: i3.Platform,
                                diDeps: [], lifecycleHooks: [] } }, useClass: { reference: i3.Platform,
                            diDeps: [], lifecycleHooks: [] }, useValue: undefined,
                        useFactory: null, useExisting: undefined, deps: [],
                        multi: false }, module: { reference: i3.PlatformModule, diDeps: [],
                        lifecycleHooks: [] } }, { provider: { token: { identifier: { reference: i1.ScrollDispatcher } },
                        useClass: null, useValue: undefined, useFactory: { reference: i1.ɵe,
                            diDeps: [{ isAttribute: false, isHost: false, isSelf: false, isSkipSelf: true,
                                    isOptional: true, token: { identifier: { reference: i1.ScrollDispatcher } } },
                                { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false,
                                    isOptional: false, token: { identifier: { reference: i5.NgZone } } },
                                { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false,
                                    isOptional: false, token: { identifier: { reference: i3.Platform } } }] },
                        useExisting: undefined, deps: [{ isAttribute: false, isHost: false,
                                isSelf: false, isSkipSelf: true, isOptional: true, token: { identifier: { reference: i1.ScrollDispatcher } } },
                            { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: false,
                                token: { identifier: { reference: i5.NgZone } } }, { isAttribute: false,
                                isHost: false, isSelf: false, isSkipSelf: false, isOptional: false,
                                token: { identifier: { reference: i3.Platform } } }], multi: false }, module: { reference: i1.ScrollDispatchModule,
                        diDeps: [], lifecycleHooks: [] } }, { provider: { token: { identifier: { reference: i1.ScrollStrategyOptions,
                                diDeps: [{ isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false,
                                        isOptional: false, token: { identifier: { reference: i1.ScrollDispatcher } } },
                                    { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: false,
                                        token: { identifier: { reference: i1.ViewportRuler } } }], lifecycleHooks: [] } },
                        useClass: { reference: i1.ScrollStrategyOptions, diDeps: [{ isAttribute: false,
                                    isHost: false, isSelf: false, isSkipSelf: false, isOptional: false, token: { identifier: { reference: i1.ScrollDispatcher } } },
                                { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: false,
                                    token: { identifier: { reference: i1.ViewportRuler } } }], lifecycleHooks: [] },
                        useValue: undefined, useFactory: null, useExisting: undefined,
                        deps: [{ isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false,
                                isOptional: false, token: { identifier: { reference: i1.ScrollDispatcher } } },
                            { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: false,
                                token: { identifier: { reference: i1.ViewportRuler } } }], multi: false },
                    module: { reference: i1.ScrollDispatchModule, diDeps: [], lifecycleHooks: [] } },
                { provider: { token: { identifier: { reference: i1.ViewportRuler } }, useClass: null,
                        useValue: undefined, useFactory: { reference: i1.ɵc, diDeps: [{ isAttribute: false,
                                    isHost: false, isSelf: false, isSkipSelf: true, isOptional: true, token: { identifier: { reference: i1.ViewportRuler } } },
                                { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: false,
                                    token: { identifier: { reference: i1.ScrollDispatcher } } }] }, useExisting: undefined,
                        deps: [{ isAttribute: false, isHost: false, isSelf: false, isSkipSelf: true, isOptional: true,
                                token: { identifier: { reference: i1.ViewportRuler } } }, { isAttribute: false,
                                isHost: false, isSelf: false, isSkipSelf: false, isOptional: false, token: { identifier: { reference: i1.ScrollDispatcher } } }],
                        multi: false }, module: { reference: i1.MdRippleModule, diDeps: [],
                        lifecycleHooks: [] } }, { provider: { token: { identifier: { reference: i6.NgLocalization } },
                        useClass: { reference: i6.NgLocaleLocalization, diDeps: [{ isAttribute: false,
                                    isHost: false, isSelf: false, isSkipSelf: false, isOptional: false, token: { identifier: { reference: i5.LOCALE_ID } } }],
                            lifecycleHooks: [] }, useValue: undefined, useFactory: null,
                        useExisting: undefined, deps: [{ isAttribute: false, isHost: false,
                                isSelf: false, isSkipSelf: false, isOptional: false, token: { identifier: { reference: i5.LOCALE_ID } } }],
                        multi: false }, module: { reference: i6.CommonModule, diDeps: [],
                        lifecycleHooks: [] } }, { provider: { token: { identifier: { reference: i1.Overlay,
                                diDeps: [{ isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false,
                                        isOptional: false, token: { identifier: { reference: i1.ScrollStrategyOptions } } },
                                    { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: false,
                                        token: { identifier: { reference: i1.OverlayContainer } } }, { isAttribute: false,
                                        isHost: false, isSelf: false, isSkipSelf: false, isOptional: false,
                                        token: { identifier: { reference: i5.ComponentFactoryResolver } } },
                                    { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: false,
                                        token: { identifier: { reference: i1.ɵt } } }, { isAttribute: false, isHost: false,
                                        isSelf: false, isSkipSelf: false, isOptional: false, token: { identifier: { reference: i5.ApplicationRef } } },
                                    { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: false,
                                        token: { identifier: { reference: i5.Injector } } }, { isAttribute: false,
                                        isHost: false, isSelf: false, isSkipSelf: false, isOptional: false,
                                        token: { identifier: { reference: i5.NgZone } } }], lifecycleHooks: [] } },
                        useClass: { reference: i1.Overlay, diDeps: [{ isAttribute: false, isHost: false,
                                    isSelf: false, isSkipSelf: false, isOptional: false, token: { identifier: { reference: i1.ScrollStrategyOptions } } },
                                { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: false,
                                    token: { identifier: { reference: i1.OverlayContainer } } }, { isAttribute: false,
                                    isHost: false, isSelf: false, isSkipSelf: false, isOptional: false,
                                    token: { identifier: { reference: i5.ComponentFactoryResolver } } },
                                { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: false,
                                    token: { identifier: { reference: i1.ɵt } } }, { isAttribute: false, isHost: false,
                                    isSelf: false, isSkipSelf: false, isOptional: false, token: { identifier: { reference: i5.ApplicationRef } } },
                                { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: false,
                                    token: { identifier: { reference: i5.Injector } } }, { isAttribute: false,
                                    isHost: false, isSelf: false, isSkipSelf: false, isOptional: false,
                                    token: { identifier: { reference: i5.NgZone } } }], lifecycleHooks: [] },
                        useValue: undefined, useFactory: null, useExisting: undefined,
                        deps: [{ isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false,
                                isOptional: false, token: { identifier: { reference: i1.ScrollStrategyOptions } } },
                            { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: false,
                                token: { identifier: { reference: i1.OverlayContainer } } }, { isAttribute: false,
                                isHost: false, isSelf: false, isSkipSelf: false, isOptional: false,
                                token: { identifier: { reference: i5.ComponentFactoryResolver } } },
                            { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: false,
                                token: { identifier: { reference: i1.ɵt } } }, { isAttribute: false, isHost: false,
                                isSelf: false, isSkipSelf: false, isOptional: false, token: { identifier: { reference: i5.ApplicationRef } } },
                            { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: false,
                                token: { identifier: { reference: i5.Injector } } }, { isAttribute: false,
                                isHost: false, isSelf: false, isSkipSelf: false, isOptional: false,
                                token: { identifier: { reference: i5.NgZone } } }], multi: false }, module: { reference: i1.OverlayModule,
                        diDeps: [], lifecycleHooks: [] } }, { provider: { token: { identifier: { reference: i1.ɵt,
                                diDeps: [{ isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false,
                                        isOptional: false, token: { identifier: { reference: i1.ViewportRuler } } }],
                                lifecycleHooks: [] } }, useClass: { reference: i1.ɵt, diDeps: [{ isAttribute: false,
                                    isHost: false, isSelf: false, isSkipSelf: false, isOptional: false, token: { identifier: { reference: i1.ViewportRuler } } }],
                            lifecycleHooks: [] }, useValue: undefined, useFactory: null,
                        useExisting: undefined, deps: [{ isAttribute: false, isHost: false,
                                isSelf: false, isSkipSelf: false, isOptional: false, token: { identifier: { reference: i1.ViewportRuler } } }],
                        multi: false }, module: { reference: i1.OverlayModule, diDeps: [],
                        lifecycleHooks: [] } }, { provider: { token: { identifier: { reference: i1.ViewportRuler } },
                        useClass: null, useValue: undefined, useFactory: { reference: i1.ɵc,
                            diDeps: [{ isAttribute: false, isHost: false, isSelf: false, isSkipSelf: true,
                                    isOptional: true, token: { identifier: { reference: i1.ViewportRuler } } },
                                { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false,
                                    isOptional: false, token: { identifier: { reference: i1.ScrollDispatcher } } }] },
                        useExisting: undefined, deps: [{ isAttribute: false, isHost: false,
                                isSelf: false, isSkipSelf: true, isOptional: true, token: { identifier: { reference: i1.ViewportRuler } } },
                            { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: false,
                                token: { identifier: { reference: i1.ScrollDispatcher } } }], multi: false },
                    module: { reference: i1.OverlayModule, diDeps: [], lifecycleHooks: [] } },
                { provider: { token: { identifier: { reference: i1.OverlayContainer } }, useClass: null,
                        useValue: undefined, useFactory: { reference: i1.ɵa, diDeps: [{ isAttribute: false,
                                    isHost: false, isSelf: false, isSkipSelf: true, isOptional: true, token: { identifier: { reference: i1.OverlayContainer } } }] },
                        useExisting: undefined, deps: [{ isAttribute: false, isHost: false,
                                isSelf: false, isSkipSelf: true, isOptional: true, token: { identifier: { reference: i1.OverlayContainer } } }],
                        multi: false }, module: { reference: i1.OverlayModule, diDeps: [],
                        lifecycleHooks: [] } }, { provider: { token: { identifier: { reference: i1.FocusOriginMonitor } },
                        useClass: null, useValue: undefined, useFactory: { reference: i1.FOCUS_ORIGIN_MONITOR_PROVIDER_FACTORY,
                            diDeps: [{ isAttribute: false, isHost: false, isSelf: false, isSkipSelf: true,
                                    isOptional: true, token: { identifier: { reference: i1.FocusOriginMonitor } } },
                                { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false,
                                    isOptional: false, token: { identifier: { reference: i5.NgZone } } },
                                { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false,
                                    isOptional: false, token: { identifier: { reference: i3.Platform } } }] },
                        useExisting: undefined, deps: [{ isAttribute: false, isHost: false,
                                isSelf: false, isSkipSelf: true, isOptional: true, token: { identifier: { reference: i1.FocusOriginMonitor } } },
                            { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: false,
                                token: { identifier: { reference: i5.NgZone } } }, { isAttribute: false,
                                isHost: false, isSelf: false, isSkipSelf: false, isOptional: false,
                                token: { identifier: { reference: i3.Platform } } }], multi: false }, module: { reference: i1.StyleModule,
                        diDeps: [], lifecycleHooks: [] } }, { provider: { token: { identifier: { reference: i7.ɵi,
                                diDeps: [], lifecycleHooks: [] } }, useClass: { reference: i7.ɵi,
                            diDeps: [], lifecycleHooks: [] }, useValue: undefined,
                        useFactory: null, useExisting: undefined, deps: [],
                        multi: false }, module: { reference: i7.FormsModule, diDeps: [], lifecycleHooks: [] } },
                { provider: { token: { identifier: { reference: i1.UniqueSelectionDispatcher } }, useClass: null,
                        useValue: undefined, useFactory: { reference: i1.ɵh, diDeps: [{ isAttribute: false,
                                    isHost: false, isSelf: false, isSkipSelf: true, isOptional: true, token: { identifier: { reference: i1.UniqueSelectionDispatcher } } }] },
                        useExisting: undefined, deps: [{ isAttribute: false, isHost: false,
                                isSelf: false, isSkipSelf: true, isOptional: true, token: { identifier: { reference: i1.UniqueSelectionDispatcher } } }],
                        multi: false }, module: { reference: i1.MdButtonToggleModule, diDeps: [],
                        lifecycleHooks: [] } }, { provider: { token: { identifier: { reference: i3.MdMutationObserverFactory,
                                diDeps: [], lifecycleHooks: [] } }, useClass: { reference: i3.MdMutationObserverFactory,
                            diDeps: [], lifecycleHooks: [] }, useValue: undefined,
                        useFactory: null, useExisting: undefined, deps: [],
                        multi: false }, module: { reference: i3.ObserveContentModule, diDeps: [],
                        lifecycleHooks: [] } }, { provider: { token: { identifier: { reference: i1.FocusOriginMonitor,
                                diDeps: [{ isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false,
                                        isOptional: false, token: { identifier: { reference: i5.NgZone } } }, { isAttribute: false,
                                        isHost: false, isSelf: false, isSkipSelf: false, isOptional: false, token: { identifier: { reference: i3.Platform } } }],
                                lifecycleHooks: [] } }, useClass: { reference: i1.FocusOriginMonitor,
                            diDeps: [{ isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false,
                                    isOptional: false, token: { identifier: { reference: i5.NgZone } } }, { isAttribute: false,
                                    isHost: false, isSelf: false, isSkipSelf: false, isOptional: false, token: { identifier: { reference: i3.Platform } } }],
                            lifecycleHooks: [] }, useValue: undefined, useFactory: null,
                        useExisting: undefined, deps: [{ isAttribute: false, isHost: false,
                                isSelf: false, isSkipSelf: false, isOptional: false, token: { identifier: { reference: i5.NgZone } } },
                            { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: false,
                                token: { identifier: { reference: i3.Platform } } }], multi: false }, module: { reference: i1.MdCheckboxModule,
                        diDeps: [], lifecycleHooks: [] } }, { provider: { token: { identifier: { reference: i3.InteractivityChecker,
                                diDeps: [{ isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false,
                                        isOptional: false, token: { identifier: { reference: i3.Platform } } }], lifecycleHooks: [] } },
                        useClass: { reference: i3.InteractivityChecker, diDeps: [{ isAttribute: false,
                                    isHost: false, isSelf: false, isSkipSelf: false, isOptional: false, token: { identifier: { reference: i3.Platform } } }],
                            lifecycleHooks: [] }, useValue: undefined, useFactory: null,
                        useExisting: undefined, deps: [{ isAttribute: false, isHost: false,
                                isSelf: false, isSkipSelf: false, isOptional: false, token: { identifier: { reference: i3.Platform } } }],
                        multi: false }, module: { reference: i3.A11yModule, diDeps: [], lifecycleHooks: [] } },
                { provider: { token: { identifier: { reference: i3.FocusTrapFactory, diDeps: [{ isAttribute: false,
                                        isHost: false, isSelf: false, isSkipSelf: false, isOptional: false, token: { identifier: { reference: i3.InteractivityChecker } } },
                                    { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: false,
                                        token: { identifier: { reference: i3.Platform } } }, { isAttribute: false, isHost: false,
                                        isSelf: false, isSkipSelf: false, isOptional: false, token: { identifier: { reference: i5.NgZone } } }],
                                lifecycleHooks: [] } }, useClass: { reference: i3.FocusTrapFactory,
                            diDeps: [{ isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false,
                                    isOptional: false, token: { identifier: { reference: i3.InteractivityChecker } } },
                                { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: false,
                                    token: { identifier: { reference: i3.Platform } } }, { isAttribute: false,
                                    isHost: false, isSelf: false, isSkipSelf: false, isOptional: false,
                                    token: { identifier: { reference: i5.NgZone } } }], lifecycleHooks: [] },
                        useValue: undefined, useFactory: null, useExisting: undefined,
                        deps: [{ isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false,
                                isOptional: false, token: { identifier: { reference: i3.InteractivityChecker } } },
                            { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: false,
                                token: { identifier: { reference: i3.Platform } } }, { isAttribute: false,
                                isHost: false, isSelf: false, isSkipSelf: false, isOptional: false,
                                token: { identifier: { reference: i5.NgZone } } }], multi: false }, module: { reference: i3.A11yModule,
                        diDeps: [], lifecycleHooks: [] } }, { provider: { token: { identifier: { reference: i3.LiveAnnouncer } },
                        useClass: null, useValue: undefined, useFactory: { reference: i3.LIVE_ANNOUNCER_PROVIDER_FACTORY,
                            diDeps: [{ isAttribute: false, isHost: false, isSelf: false, isSkipSelf: true,
                                    isOptional: true, token: { identifier: { reference: i3.LiveAnnouncer } } },
                                { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false,
                                    isOptional: true, token: { identifier: { reference: i3.LIVE_ANNOUNCER_ELEMENT_TOKEN } } },
                                { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false,
                                    isOptional: false, token: { identifier: { reference: i3.Platform } } }] },
                        useExisting: undefined, deps: [{ isAttribute: false, isHost: false,
                                isSelf: false, isSkipSelf: true, isOptional: true, token: { identifier: { reference: i3.LiveAnnouncer } } },
                            { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: true,
                                token: { identifier: { reference: i3.LIVE_ANNOUNCER_ELEMENT_TOKEN } } },
                            { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: false,
                                token: { identifier: { reference: i3.Platform } } }], multi: false }, module: { reference: i3.A11yModule,
                        diDeps: [], lifecycleHooks: [] } }, { provider: { token: { identifier: { reference: i1.MdDialog,
                                diDeps: [{ isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false,
                                        isOptional: false, token: { identifier: { reference: i1.Overlay } } }, { isAttribute: false,
                                        isHost: false, isSelf: false, isSkipSelf: false, isOptional: false, token: { identifier: { reference: i5.Injector } } },
                                    { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: true,
                                        token: { identifier: { reference: i6.Location } } }, { isAttribute: false,
                                        isHost: false, isSelf: false, isSkipSelf: true, isOptional: true, token: { identifier: { reference: i1.MdDialog } } }],
                                lifecycleHooks: [] } }, useClass: { reference: i1.MdDialog, diDeps: [{ isAttribute: false,
                                    isHost: false, isSelf: false, isSkipSelf: false, isOptional: false, token: { identifier: { reference: i1.Overlay } } },
                                { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: false,
                                    token: { identifier: { reference: i5.Injector } } }, { isAttribute: false, isHost: false,
                                    isSelf: false, isSkipSelf: false, isOptional: true, token: { identifier: { reference: i6.Location } } },
                                { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: true, isOptional: true,
                                    token: { identifier: { reference: i1.MdDialog } } }], lifecycleHooks: [] },
                        useValue: undefined, useFactory: null, useExisting: undefined,
                        deps: [{ isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false,
                                isOptional: false, token: { identifier: { reference: i1.Overlay } } }, { isAttribute: false,
                                isHost: false, isSelf: false, isSkipSelf: false, isOptional: false, token: { identifier: { reference: i5.Injector } } },
                            { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: true,
                                token: { identifier: { reference: i6.Location } } }, { isAttribute: false,
                                isHost: false, isSelf: false, isSkipSelf: true, isOptional: true, token: { identifier: { reference: i1.MdDialog } } }],
                        multi: false }, module: { reference: i1.MdDialogModule, diDeps: [],
                        lifecycleHooks: [] } }, { provider: { token: { identifier: { reference: i1.MdDatepickerIntl,
                                diDeps: [], lifecycleHooks: [] } }, useClass: { reference: i1.MdDatepickerIntl,
                            diDeps: [], lifecycleHooks: [] }, useValue: undefined,
                        useFactory: null, useExisting: undefined, deps: [],
                        multi: false }, module: { reference: i1.MdDatepickerModule, diDeps: [],
                        lifecycleHooks: [] } }, { provider: { token: { identifier: { reference: i1.UniqueSelectionDispatcher } },
                        useClass: null, useValue: undefined, useFactory: { reference: i1.ɵh,
                            diDeps: [{ isAttribute: false, isHost: false, isSelf: false, isSkipSelf: true,
                                    isOptional: true, token: { identifier: { reference: i1.UniqueSelectionDispatcher } } }] },
                        useExisting: undefined, deps: [{ isAttribute: false, isHost: false,
                                isSelf: false, isSkipSelf: true, isOptional: true, token: { identifier: { reference: i1.UniqueSelectionDispatcher } } }],
                        multi: false }, module: { reference: i1.MdExpansionModule, diDeps: [],
                        lifecycleHooks: [] } }, { provider: { token: { identifier: { reference: i1.MdIconRegistry } },
                        useClass: null, useValue: undefined, useFactory: { reference: i1.ICON_REGISTRY_PROVIDER_FACTORY,
                            diDeps: [{ isAttribute: false, isHost: false, isSelf: false, isSkipSelf: true,
                                    isOptional: true, token: { identifier: { reference: i1.MdIconRegistry } } },
                                { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false,
                                    isOptional: true, token: { identifier: { reference: i8.Http } } },
                                { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false,
                                    isOptional: false, token: { identifier: { reference: i4.DomSanitizer } } }] },
                        useExisting: undefined, deps: [{ isAttribute: false, isHost: false,
                                isSelf: false, isSkipSelf: true, isOptional: true, token: { identifier: { reference: i1.MdIconRegistry } } },
                            { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: true,
                                token: { identifier: { reference: i8.Http } } }, { isAttribute: false, isHost: false,
                                isSelf: false, isSkipSelf: false, isOptional: false, token: { identifier: { reference: i4.DomSanitizer } } }],
                        multi: false }, module: { reference: i1.MdIconModule, diDeps: [],
                        lifecycleHooks: [] } }, { provider: { token: { identifier: { reference: i1.DateAdapter } },
                        useClass: { reference: i1.NativeDateAdapter, diDeps: [], lifecycleHooks: [] },
                        useValue: undefined, useFactory: null, useExisting: undefined,
                        deps: [], multi: false }, module: { reference: i1.NativeDateModule,
                        diDeps: [], lifecycleHooks: [] } }, { provider: { token: { identifier: { reference: i1.MD_DATE_FORMATS } },
                        useClass: null, useValue: i1.MD_NATIVE_DATE_FORMATS, useFactory: null,
                        useExisting: undefined, deps: undefined, multi: false },
                    module: { reference: i1.MdNativeDateModule, diDeps: [], lifecycleHooks: [] } },
                { provider: { token: { identifier: { reference: i1.ɵx, diDeps: [], lifecycleHooks: [] } },
                        useClass: { reference: i1.ɵx, diDeps: [], lifecycleHooks: [] },
                        useValue: undefined, useFactory: null, useExisting: undefined,
                        deps: [], multi: false }, module: { reference: i1.MdPaginatorModule,
                        diDeps: [], lifecycleHooks: [] } }, { provider: { token: { identifier: { reference: i1.UniqueSelectionDispatcher } },
                        useClass: null, useValue: undefined, useFactory: { reference: i1.ɵh,
                            diDeps: [{ isAttribute: false, isHost: false, isSelf: false, isSkipSelf: true,
                                    isOptional: true, token: { identifier: { reference: i1.UniqueSelectionDispatcher } } }] },
                        useExisting: undefined, deps: [{ isAttribute: false, isHost: false,
                                isSelf: false, isSkipSelf: true, isOptional: true, token: { identifier: { reference: i1.UniqueSelectionDispatcher } } }],
                        multi: false }, module: { reference: i1.MdRadioModule, diDeps: [],
                        lifecycleHooks: [] } }, { provider: { token: { identifier: { reference: i1.ViewportRuler } },
                        useClass: null, useValue: undefined, useFactory: { reference: i1.ɵc,
                            diDeps: [{ isAttribute: false, isHost: false, isSelf: false, isSkipSelf: true,
                                    isOptional: true, token: { identifier: { reference: i1.ViewportRuler } } },
                                { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false,
                                    isOptional: false, token: { identifier: { reference: i1.ScrollDispatcher } } }] },
                        useExisting: undefined, deps: [{ isAttribute: false, isHost: false,
                                isSelf: false, isSkipSelf: true, isOptional: true, token: { identifier: { reference: i1.ViewportRuler } } },
                            { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: false,
                                token: { identifier: { reference: i1.ScrollDispatcher } } }], multi: false },
                    module: { reference: i1.MdRadioModule, diDeps: [], lifecycleHooks: [] } },
                { provider: { token: { identifier: { reference: i1.FocusOriginMonitor, diDeps: [{ isAttribute: false,
                                        isHost: false, isSelf: false, isSkipSelf: false, isOptional: false, token: { identifier: { reference: i5.NgZone } } },
                                    { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: false,
                                        token: { identifier: { reference: i3.Platform } } }], lifecycleHooks: [] } },
                        useClass: { reference: i1.FocusOriginMonitor, diDeps: [{ isAttribute: false,
                                    isHost: false, isSelf: false, isSkipSelf: false, isOptional: false, token: { identifier: { reference: i5.NgZone } } },
                                { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: false,
                                    token: { identifier: { reference: i3.Platform } } }], lifecycleHooks: [] },
                        useValue: undefined, useFactory: null, useExisting: undefined,
                        deps: [{ isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false,
                                isOptional: false, token: { identifier: { reference: i5.NgZone } } }, { isAttribute: false,
                                isHost: false, isSelf: false, isSkipSelf: false, isOptional: false, token: { identifier: { reference: i3.Platform } } }],
                        multi: false }, module: { reference: i1.MdRadioModule, diDeps: [],
                        lifecycleHooks: [] } }, { provider: { token: { identifier: { reference: i4.HAMMER_GESTURE_CONFIG } },
                        useClass: { reference: i1.GestureConfig, diDeps: [], lifecycleHooks: [] },
                        useValue: undefined, useFactory: null, useExisting: undefined,
                        deps: [], multi: false }, module: { reference: i1.MdSliderModule,
                        diDeps: [], lifecycleHooks: [] } }, { provider: { token: { identifier: { reference: i1.FocusOriginMonitor } },
                        useClass: null, useValue: undefined, useFactory: { reference: i1.FOCUS_ORIGIN_MONITOR_PROVIDER_FACTORY,
                            diDeps: [{ isAttribute: false, isHost: false, isSelf: false, isSkipSelf: true,
                                    isOptional: true, token: { identifier: { reference: i1.FocusOriginMonitor } } },
                                { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false,
                                    isOptional: false, token: { identifier: { reference: i5.NgZone } } },
                                { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false,
                                    isOptional: false, token: { identifier: { reference: i3.Platform } } }] },
                        useExisting: undefined, deps: [{ isAttribute: false, isHost: false,
                                isSelf: false, isSkipSelf: true, isOptional: true, token: { identifier: { reference: i1.FocusOriginMonitor } } },
                            { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: false,
                                token: { identifier: { reference: i5.NgZone } } }, { isAttribute: false,
                                isHost: false, isSelf: false, isSkipSelf: false, isOptional: false,
                                token: { identifier: { reference: i3.Platform } } }], multi: false }, module: { reference: i1.MdSlideToggleModule,
                        diDeps: [], lifecycleHooks: [] } }, { provider: { token: { identifier: { reference: i4.HAMMER_GESTURE_CONFIG } },
                        useClass: { reference: i1.GestureConfig, diDeps: [], lifecycleHooks: [] },
                        useValue: undefined, useFactory: null, useExisting: undefined,
                        deps: [], multi: false }, module: { reference: i1.MdSlideToggleModule,
                        diDeps: [], lifecycleHooks: [] } }, { provider: { token: { identifier: { reference: i1.MdSnackBar,
                                diDeps: [{ isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false,
                                        isOptional: false, token: { identifier: { reference: i1.Overlay } } }, { isAttribute: false,
                                        isHost: false, isSelf: false, isSkipSelf: false, isOptional: false, token: { identifier: { reference: i3.LiveAnnouncer } } },
                                    { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: true, isOptional: true,
                                        token: { identifier: { reference: i1.MdSnackBar } } }], lifecycleHooks: [] } },
                        useClass: { reference: i1.MdSnackBar, diDeps: [{ isAttribute: false, isHost: false,
                                    isSelf: false, isSkipSelf: false, isOptional: false, token: { identifier: { reference: i1.Overlay } } },
                                { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: false,
                                    token: { identifier: { reference: i3.LiveAnnouncer } } }, { isAttribute: false,
                                    isHost: false, isSelf: false, isSkipSelf: true, isOptional: true, token: { identifier: { reference: i1.MdSnackBar } } }],
                            lifecycleHooks: [] }, useValue: undefined, useFactory: null,
                        useExisting: undefined, deps: [{ isAttribute: false, isHost: false,
                                isSelf: false, isSkipSelf: false, isOptional: false, token: { identifier: { reference: i1.Overlay } } },
                            { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: false,
                                token: { identifier: { reference: i3.LiveAnnouncer } } }, { isAttribute: false,
                                isHost: false, isSelf: false, isSkipSelf: true, isOptional: true, token: { identifier: { reference: i1.MdSnackBar } } }],
                        multi: false }, module: { reference: i1.MdSnackBarModule, diDeps: [],
                        lifecycleHooks: [] } }, { provider: { token: { identifier: { reference: i3.LiveAnnouncer } },
                        useClass: null, useValue: undefined, useFactory: { reference: i3.LIVE_ANNOUNCER_PROVIDER_FACTORY,
                            diDeps: [{ isAttribute: false, isHost: false, isSelf: false, isSkipSelf: true,
                                    isOptional: true, token: { identifier: { reference: i3.LiveAnnouncer } } },
                                { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false,
                                    isOptional: true, token: { identifier: { reference: i3.LIVE_ANNOUNCER_ELEMENT_TOKEN } } },
                                { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false,
                                    isOptional: false, token: { identifier: { reference: i3.Platform } } }] },
                        useExisting: undefined, deps: [{ isAttribute: false, isHost: false,
                                isSelf: false, isSkipSelf: true, isOptional: true, token: { identifier: { reference: i3.LiveAnnouncer } } },
                            { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: true,
                                token: { identifier: { reference: i3.LIVE_ANNOUNCER_ELEMENT_TOKEN } } },
                            { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: false,
                                token: { identifier: { reference: i3.Platform } } }], multi: false }, module: { reference: i1.MdSnackBarModule,
                        diDeps: [], lifecycleHooks: [] } }, { provider: { token: { identifier: { reference: i1.MdSortHeaderIntl,
                                diDeps: [], lifecycleHooks: [] } }, useClass: { reference: i1.MdSortHeaderIntl,
                            diDeps: [], lifecycleHooks: [] }, useValue: undefined,
                        useFactory: null, useExisting: undefined, deps: [],
                        multi: false }, module: { reference: i1.MdSortModule, diDeps: [],
                        lifecycleHooks: [] } }, { provider: { token: { identifier: { reference: i1.ViewportRuler } },
                        useClass: null, useValue: undefined, useFactory: { reference: i1.ɵc,
                            diDeps: [{ isAttribute: false, isHost: false, isSelf: false, isSkipSelf: true,
                                    isOptional: true, token: { identifier: { reference: i1.ViewportRuler } } },
                                { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false,
                                    isOptional: false, token: { identifier: { reference: i1.ScrollDispatcher } } }] },
                        useExisting: undefined, deps: [{ isAttribute: false, isHost: false,
                                isSelf: false, isSkipSelf: true, isOptional: true, token: { identifier: { reference: i1.ViewportRuler } } },
                            { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: false,
                                token: { identifier: { reference: i1.ScrollDispatcher } } }], multi: false },
                    module: { reference: i1.MdTabsModule, diDeps: [], lifecycleHooks: [] } }],
            modules: [{ reference: i1.CompatibilityModule, diDeps: [], lifecycleHooks: [] },
                { reference: i3.BidiModule, diDeps: [], lifecycleHooks: [] },
                { reference: i1.MdCommonModule, diDeps: [{ isAttribute: false, isHost: false, isSelf: false,
                            isSkipSelf: false, isOptional: true, token: { identifier: { reference: i4.DOCUMENT } } },
                        { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: true,
                            token: { identifier: { reference: i1.MATERIAL_SANITY_CHECKS } } }], lifecycleHooks: [] },
                { reference: i3.PlatformModule, diDeps: [], lifecycleHooks: [] },
                { reference: i1.ScrollDispatchModule, diDeps: [], lifecycleHooks: [] },
                { reference: i1.MdRippleModule, diDeps: [], lifecycleHooks: [] },
                { reference: i6.CommonModule, diDeps: [], lifecycleHooks: [] },
                { reference: i1.MdSelectionModule, diDeps: [], lifecycleHooks: [] },
                { reference: i1.MdOptionModule, diDeps: [], lifecycleHooks: [] },
                { reference: i3.PortalModule, diDeps: [], lifecycleHooks: [] },
                { reference: i1.OverlayModule, diDeps: [], lifecycleHooks: [] },
                { reference: i1.MdAutocompleteModule, diDeps: [], lifecycleHooks: [] },
                { reference: i1.StyleModule, diDeps: [], lifecycleHooks: [] },
                { reference: i1.MdButtonModule, diDeps: [], lifecycleHooks: [] },
                { reference: i7.ɵba, diDeps: [], lifecycleHooks: [] }, { reference: i7.FormsModule,
                    diDeps: [], lifecycleHooks: [] }, { reference: i1.MdButtonToggleModule,
                    diDeps: [], lifecycleHooks: [] }, { reference: i1.MdCardModule,
                    diDeps: [], lifecycleHooks: [] }, { reference: i3.ObserveContentModule,
                    diDeps: [], lifecycleHooks: [] }, { reference: i1.MdCheckboxModule,
                    diDeps: [], lifecycleHooks: [] }, { reference: i1.MdChipsModule,
                    diDeps: [], lifecycleHooks: [] }, { reference: i1.MdLineModule,
                    diDeps: [], lifecycleHooks: [] }, { reference: i3.A11yModule,
                    diDeps: [], lifecycleHooks: [] }, { reference: i1.MdCoreModule,
                    diDeps: [], lifecycleHooks: [] }, { reference: i1.MdDialogModule,
                    diDeps: [], lifecycleHooks: [] }, { reference: i1.MdDatepickerModule,
                    diDeps: [], lifecycleHooks: [] }, { reference: i1.MdExpansionModule,
                    diDeps: [], lifecycleHooks: [] }, { reference: i1.MdGridListModule,
                    diDeps: [], lifecycleHooks: [] }, { reference: i1.MdIconModule,
                    diDeps: [], lifecycleHooks: [] }, { reference: i1.MdInputModule,
                    diDeps: [], lifecycleHooks: [] }, { reference: i1.MdListModule,
                    diDeps: [], lifecycleHooks: [] }, { reference: i1.MdMenuModule,
                    diDeps: [], lifecycleHooks: [] }, { reference: i1.NativeDateModule,
                    diDeps: [], lifecycleHooks: [] }, { reference: i1.MdNativeDateModule,
                    diDeps: [], lifecycleHooks: [] }, { reference: i1.MdSelectModule,
                    diDeps: [], lifecycleHooks: [] }, { reference: i1.MdTooltipModule,
                    diDeps: [], lifecycleHooks: [] }, { reference: i1.MdPaginatorModule,
                    diDeps: [], lifecycleHooks: [] }, { reference: i1.MdProgressBarModule,
                    diDeps: [], lifecycleHooks: [] }, { reference: i1.MdProgressSpinnerModule,
                    diDeps: [], lifecycleHooks: [] }, { reference: i1.MdRadioModule,
                    diDeps: [], lifecycleHooks: [] }, { reference: i1.MdSidenavModule,
                    diDeps: [], lifecycleHooks: [] }, { reference: i1.MdSliderModule,
                    diDeps: [], lifecycleHooks: [] }, { reference: i1.MdSlideToggleModule,
                    diDeps: [], lifecycleHooks: [] }, { reference: i1.MdSnackBarModule,
                    diDeps: [], lifecycleHooks: [] }, { reference: i1.MdSortModule,
                    diDeps: [], lifecycleHooks: [] }, { reference: i3.CdkTableModule,
                    diDeps: [], lifecycleHooks: [] }, { reference: i1.MdTableModule,
                    diDeps: [], lifecycleHooks: [] }, { reference: i1.MdTabsModule,
                    diDeps: [], lifecycleHooks: [] }, { reference: i1.MdToolbarModule,
                    diDeps: [], lifecycleHooks: [] }, { reference: i9.MaterialModule,
                    diDeps: [], lifecycleHooks: [] }, { reference: i10.RouterModule,
                    diDeps: [{ isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false,
                            isOptional: true, token: { identifier: { reference: i10.ɵa } } }, { isAttribute: false,
                            isHost: false, isSelf: false, isSkipSelf: false, isOptional: true, token: { identifier: { reference: i10.Router } } }],
                    lifecycleHooks: [] }, { reference: i0.SharedModule, diDeps: [],
                    lifecycleHooks: [] }], exportedDirectives: [{ reference: i11.FooterComponent },
                { reference: i12.NavigationComponent }], exportedPipes: [] }, i13.FooterComponentNgSummary,
        i14.NavigationComponentNgSummary, i15.CompatibilityModuleNgSummary, i16.BidiModuleNgSummary,
        i15.MdCommonModuleNgSummary, i16.PlatformModuleNgSummary, i15.ScrollDispatchModuleNgSummary,
        i15.MdRippleModuleNgSummary, i17.CommonModuleNgSummary, i15.MdSelectionModuleNgSummary,
        i15.MdOptionModuleNgSummary, i16.PortalModuleNgSummary, i15.OverlayModuleNgSummary,
        i15.MdAutocompleteModuleNgSummary, i15.StyleModuleNgSummary, i15.MdButtonModuleNgSummary,
        i18.ɵbaNgSummary, i18.FormsModuleNgSummary, i15.MdButtonToggleModuleNgSummary,
        i15.MdCardModuleNgSummary, i16.ObserveContentModuleNgSummary, i15.MdCheckboxModuleNgSummary,
        i15.MdChipsModuleNgSummary, i15.MdLineModuleNgSummary, i16.A11yModuleNgSummary,
        i15.MdCoreModuleNgSummary, i15.MdDialogModuleNgSummary, i15.MdDatepickerModuleNgSummary,
        i15.MdExpansionModuleNgSummary, i15.MdGridListModuleNgSummary, i15.MdIconModuleNgSummary,
        i15.MdInputModuleNgSummary, i15.MdListModuleNgSummary, i15.MdMenuModuleNgSummary,
        i15.NativeDateModuleNgSummary, i15.MdNativeDateModuleNgSummary, i15.MdSelectModuleNgSummary,
        i15.MdTooltipModuleNgSummary, i15.MdPaginatorModuleNgSummary, i15.MdProgressBarModuleNgSummary,
        i15.MdProgressSpinnerModuleNgSummary, i15.MdRadioModuleNgSummary, i15.MdSidenavModuleNgSummary,
        i15.MdSliderModuleNgSummary, i15.MdSlideToggleModuleNgSummary, i15.MdSnackBarModuleNgSummary,
        i15.MdSortModuleNgSummary, i16.CdkTableModuleNgSummary, i15.MdTableModuleNgSummary,
        i15.MdTabsModuleNgSummary, i15.MdToolbarModuleNgSummary, i19.MaterialModuleNgSummary,
        i20.RouterModuleNgSummary];
}
